"""
Detect a cycle in a linked list. Note that the head pointer may be 'None' if the list is empty.

A Node is defined as: 
 
    class Node(object):
        def __init__(self, data = None, next_node = None):
            self.data = data
            self.next = next_node
"""
 

def has_cycle(head):
    current_link = head
    seen_link = set()
    while current_link:
        if current_link in seen_link:
            return True
        seen_link.add(current_link)
        current_link = current_link.next
    return False
